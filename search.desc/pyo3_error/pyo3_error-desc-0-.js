searchState.loadedDescShard("pyo3_error", 0, "CI Status MSRV Latest Version Rust Doc Crate Rust Doc Main\nUtility trait to try to translate from <code>std::error::Error</code> …\nTry to map a <code>std::error::Error</code> via a specific error type <code>T</code> …\nNever attempt to translate any <code>std::error::Error</code> to <code>PyErr</code> …\nTranslate <code>std::io::Error</code> to <code>PyErr</code> when used as …\nUtility trait to try to translate via specific error types …\n<code>PyErrChain</code> wraps a <code>PyErr</code> together with its causality chain.\nGet a reference to the wrapped <code>PyErr</code>.\nGet a reference to the cause of the wrapped <code>PyErr</code>.\nClone the <code>PyErrChain</code>.\nUtility function to add a traceback with the error’s <code>file</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWrap a <code>PyErr</code> and capture its causality chain, as expressed …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtract the wrapped <code>PyErr</code>.\nCreate a new <code>PyErrChain</code> from <code>err</code>.\nCreate a new <code>PyErrChain</code> from <code>err</code> using a custom translator …\nTransform an <code>err</code> implementing <code>std::error::Error</code> into a …\nTransform an <code>err</code> implementing <code>std::error::Error</code> into a …\nTry to translate from a boxed <code>err</code> to a <code>PyErr</code>, or return …\nTry to translate from an <code>err</code> reference to a <code>PyErr</code>, or …\nTry to map from a boxed <code>err</code> via the specific error type <code>T</code> …\nTry to map from an <code>err</code> reference via the specific error …")