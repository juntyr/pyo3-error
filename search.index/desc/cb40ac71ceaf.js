rd_("CkCreate a new <code>PyErrChain</code> from <code>err</code>.AoReturns the argument unchanged.000BaCalls <code>U::from(self)</code>.000CoGet a reference to the cause of the wrapped <code>PyErr</code>.EgTry to map from a boxed <code>err</code> via the specific error type <code>T</code> \xe2\x80\xa6CbGet a reference to the wrapped <code>PyErr</code>.BbClone the <code>PyErrChain</code>.Ee<code>PyErrChain</code> wraps a <code>PyErr</code> together with its causality chain.DkWrap a <code>PyErr</code> and capture its causality chain, as expressed \xe2\x80\xa6BgExtract the wrapped <code>PyErr</code>.CjCI Status MSRV Latest Version Rust Doc Crate Rust Doc MainDhTry to map from an <code>err</code> reference via the specific error \xe2\x80\xa6EgNever attempt to translate any <code>std::error::Error</code> to <code>PyErr</code> \xe2\x80\xa6EeTry to translate from a boxed <code>err</code> to a <code>PyErr</code>, or return \xe2\x80\xa6DlTranslate <code>std::io::Error</code> to <code>PyErr</code> when used as \xe2\x80\xa6EdTransform an <code>err</code> implementing <code>std::error::Error</code> into a \xe2\x80\xa6DiUtility trait to try to translate from <code>std::error::Error</code> \xe2\x80\xa6EhTry to map a <code>std::error::Error</code> via a specific error type <code>T</code> \xe2\x80\xa6CnUtility trait to try to translate via specific error types \xe2\x80\xa6EcTry to translate from an <code>err</code> reference to a <code>PyErr</code>, or \xe2\x80\xa6DkUtility function to add a traceback with the error\xe2\x80\x99s <code>file</code>\xe2\x80\xa6EgTry to map from a boxed <code>err</code> via the specific error type <code>T</code> \xe2\x80\xa6EhCreate a new <code>PyErrChain</code> from <code>err</code> using a custom translator \xe2\x80\xa67")